/* stylelint-disable selector-type-no-unknown */
/**
 * /assets/css/input.css
 *
 * Input styles definition.
 *
 * This file is licensed under the MIT License.
 * See LICENSE in the project root for license information.
 *
 * @author		Belikhun
 * @version		1.0
 * @license		MIT
 * @copyright	2018-2023 Belikhun
 */

.sq-input {
    position: relative;
    display: flex;

    margin-top: 1rem;
    width: 100%;

    --normal-color: rgba(56, 56, 58, 0.6);
    --focus-color: rgb(38, 38, 38);
}

.sq-input > .input {
    position: relative;

    width: 100%;
    color: black;
    font-family: var(--primary-font), "Open Sans", "Calibri", "sans-serif";
    font-size: 1rem;
	line-height: 1.6;

    margin: 1rem;
    border: none;
    caret-color: var(--focus-color);
    background-color: transparent;

    z-index: 1;
}

.sq-input > .input:focus {
    outline: none;
}

.sq-input > .input::placeholder {
    color: transparent;
	user-select: none;
	visibility: hidden;
}

.sq-input > .input:disabled {
    cursor: not-allowed;
    color: rgba(56, 56, 58, 0.6);
}

.sq-input > .checkboxContainer {
	width: auto;
	height: auto;

	margin: auto 0 auto 1rem;
	padding: 0.25rem 0.15rem 0.25rem 0.5rem;
	border-radius: 0.5rem;
	background-color: var(--background);
	z-index: 1;
}

.sq-input > .checkboxContainer > span {
	font-size: 0.8rem;
	margin-right: 0.5rem;
}

.sq-input > .outline {
    display: flex;
    position: absolute;

    right: 0;
    left: 0;

    width: 100%;
    height: 100%;
    box-sizing: border-box;
    pointer-events: none;
}

.sq-input > .outline > .notch {
    height: 100%;

    border-top: 1px solid;
    border-bottom: 1px solid;

    box-sizing: border-box;
    pointer-events: none;
    transition:
		background-color 0.2s ease,
		border-color 0.2s ease;
}

.sq-input > .outline > .leading {
    width: 1rem;

    border-left: 1px solid;
    border-right: none;
    border-radius: 1rem 0 0 1rem;
}

.sq-input > .outline > .label {
    flex-shrink: 1;
}

.sq-input > .outline > .label > label {
    position: relative;
    display: inline-block;

    top: 0;
    left: 0;
    transform: translateY(1rem);

    font-family: var(--primary-font), "sans-serif";
    font-size: 1rem;
    font-weight: 700;
	line-height: 1.5rem;
    color: var(--normal-color);

    text-transform: uppercase;
    letter-spacing: .1px;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    user-select: none;
    pointer-events: none;

    transition:
        color 0.2s ease,
        transform 0.15s ease-out;
}

.sq-input > .outline > .trailing {
    flex-grow: 1;

    border-left: none;
    border-right: 1px solid;
    border-radius: 0 1rem 1rem 0;
}

.sq-input > .outline > span.notch {
    border-color: var(--normal-color);
}

.sq-input > .input:focus + .outline > .notch {
    border-top: 2px solid;
    border-bottom: 2px solid;
    border-color: var(--focus-color);
}

.sq-input > .input:focus + .outline > .leading {
    border-left-width: 2px;
}

.sq-input > .input:focus + .outline > .label,
.sq-input > .input:not(:placeholder-shown) + .outline > .label,
.sq-input.inputting > .input + .outline > .label,
.sq-input.with-enable-switch > .input + .outline > .label {
    border-top: unset;
}

.sq-input > .input:focus + .outline > .label > label {
    color: var(--focus-color);
}

.sq-input > .input:not(:placeholder-shown) + .outline > .label > label,
.sq-input > .input:focus + .outline > .label > label,
.sq-input.inputting > .input + .outline > .label > label,
.sq-input.with-enable-switch > .input + .outline > .label > label {
    transform: translateY(-0.7rem) scale(0.9);
}

.sq-input > .input:focus + .outline > .trailing {
    border-right-width: 2px;
}

.sq-input > .input:disabled + .outline > .notch {
	background-color: rgba(128, 128, 128, 0.2);
}

.sq-input.has-unit-select > .input {
	margin-right: 0;
}

.sq-input > .units {
	margin: auto 1rem auto 0;
	padding: 0.5rem;

	background-color: white;
	border-radius: 0.5rem;
	border: unset;

	font-family: inherit;
	font-size: 0.8rem;
	font-weight: 600;
	text-align: right;

	&:focus-visible {
		outline: var(--focus-color) auto 1px;
	}
}

.sq-input.message {
    margin-bottom: 30px;
}

.sq-input > .message {
    position: absolute;
    display: none;

    left: 0;
    top: calc(100% + 6px);

	font-size: 0.8rem;
	white-space: nowrap;
    color: #d31010;
}

.sq-input > .message::before {
    content: "\f06a";

    margin-right: 6px;
    font-family: "Font Awesome";
    font-size: 15px;
    font-weight: 600;
}

.sq-input.message > .message {
    display: block;
}

/* Animated */

.sq-input[animated] {
    width: 160px;
    opacity: 0;

    --duration: 0.55s;
	--delay: 0s;

    transition: all var(--duration) cubic-bezier(0.22, 0.68, 0, 1) var(--delay);
}

.sq-input[animated] > .outline > .label > label {
    left: -10px;

    transition:
        left var(--duration) cubic-bezier(0.22, 0.68, 0, 1) var(--delay),
        color 0.2s ease,
        transform 0.15s ease-out;
}

.sq-input[animated].show,
form.show .sq-input[animated],
.sq-input-show .sq-input[animated] {
    width: 100%;
	opacity: 1;
}

.sq-input[animated].show > .outline > .label > label,
form.show .sq-input[animated] > .outline > .label > label,
.sq-input-show .sq-input[animated] > .outline > .label > label {
    left: 0;
}

/* Default */

body.dark .sq-input {
    --normal-color: rgba(175, 175, 175, 0.6);
    --focus-color: rgba(240, 240, 240, 0.8);
}

body.dark .sq-input > .input {
    color: white;
}

body.dark .sq-input > .input > option {
    background-color: #1b1b1b;
}

body.dark .sq-input > .input:disabled {
    color: rgb(172, 172, 172);
}

/* Blue */

.sq-input[data-color="blue"] {
    --focus-color: #3578e4;
}

body.dark .sq-input[data-color="blue"] {
    --focus-color: var(--osc-color-blue);
}

/* Purple */

.sq-input[data-color="purple"] {
    --focus-color: #5c33bb;
}

body.dark .sq-input[data-color="purple"] {
    --focus-color: #ab88fd;
}

/* Red */

.sq-input[data-color="red"] {
    --normal-color: rgba(182, 7, 7, 0.6);
    --focus-color: #d31010;
}

.sq-input[data-color="red"] > .input {
    color: #910707;
}

body.dark .sq-input[data-color="red"] {
    --normal-color: rgba(255, 75, 99, 0.7);
    --focus-color: #ff6c87;
}

body.dark .sq-input[data-color="red"] > .input {
    color: #ff9eb0;
}

/** ===================== FLAT INPUT ===================== */

.flatInput {
    position: relative;
    display: block;

    width: auto;
    height: 30px;
    padding: 0 10px;
    box-sizing: border-box;

    font-family: var(--heading-font), var(--primary-font);
    font-weight: 400;
    font-size: 14px;

    border: unset;
    background-color: rgb(245, 245, 245);
}

.flatInput:focus {
    outline: none;
}

.flatInput::placeholder {
    letter-spacing: .4px;
    color: rgb(94, 94, 94);
}

body.dark .flatInput {
    color: white;
    background-color: rgb(34, 34, 34);
}

body.dark .flatInput::placeholder {
    color: rgb(148, 148, 148);
}

/** ===================== IMAGE INPUT ===================== */

.imageInput {
    position: relative;
    display: flex;
    flex-direction: column;

    margin: 8px 0;
}

.imageInput > input {
    display: none;
}

.imageInput > label {
    min-height: 100px;
    cursor: pointer;
}

.imageInput > label::after {
    content: "\f07c";
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;

    top: 0;
    width: 100%;
    height: 100%;

    font-family: "Font Awesome";
    font-weight: 900;
    font-size: 18px;
    font-style: normal;
    color: rgb(248, 248, 248);

    z-index: 1;
    opacity: 0;
    background-color: rgba(38, 38, 38, 0.6);

    transition: opacity 0.2s ease-out;
}

.imageInput:hover > label::after {
    opacity: 1;
}

.imageInput > label[data-errored="true"]::after {
    display: flex;
}

.imageInput > label:hover::before {
    display: none;
}

.imageInput > .clear {
    position: absolute;
    display: none;
    top: 28px;
    right: 38px;

    cursor: pointer;
    z-index: 1;
}

.imageInput > .clear.show {
    display: inline-flex;
}

.imageInput > .clear::after {
    font-size: 26px;
    color: rgb(170, 170, 170);
    transition: color 0.2s ease-out;
}

.imageInput > label:hover + .clear::after,
.imageInput > .clear:hover::after {
    color: white;
}

.imageInput > button {
    margin-top: 5px;
}

/* Dark Icon Input */
body.dark ::-webkit-calendar-picker-indicator {
    filter: invert(1);
}

/** ===================== LIST INPUT ===================== */

.listInput {
    display: flex;
    flex-direction: column;

    margin: 10px 0;
    font-family: var(--primary-font);
}

.listInput > label {
    font-size: 19px;
    font-weight: 600;
    margin: 10px 0;
}

.listInput > .inputs {
    display: flex;
    flex-direction: column;
}

.listInput > .inputs > .input {
    position: relative;
    display: flex;
    flex-direction: row;

    margin-bottom: 5px;
    padding-right: 20px;
    border-radius: 8px;

    counter-increment: listItems;
    background-color: rgb(245, 245, 245);
}

.listInput > .inputs > .input::before {
    content: counter(listItems);
    position: absolute;
    top: 50%;
    left: 18px;

    transform: translateY(-50%);
    font-size: 14px;
    font-weight: bold;
    color: black;
}

.listInput > .inputs > .input > .input {
    position: relative;
    display: block;
    flex-grow: 1;

    width: auto;
    margin-left: 20px;
    margin-right: 10px;
    padding: 20px;
    box-sizing: border-box;

    font-family: inherit;
    font-weight: 400;
    font-size: 16px;
    border: unset;
    background-color: transparent;
}

.listInput > .inputs > .input > textarea.input {
    height: 160px;
    word-wrap: break-word;
    resize: none;
}

.listInput > .inputs > .input > .input:focus {
    outline: none;
}

.listInput > .inputs > .input > icon {
    cursor: pointer;
    color: rgba(0, 0, 0, 0.4);
}

.listInput > .inputs > .input > icon:hover {
    color: rgb(255, 22, 73);
}

.listInput > .add {
    position: relative;
	display: flex;
	flex-shrink: 0;
	align-items: center;
	justify-content: space-between;

	padding: 8px 20px;
	box-sizing: border-box;
	background-color: rgba(0, 0, 0, 0.1);

	color: black;
	font-family: inherit;
	font-size: 16px;
	font-weight: 600;
	letter-spacing: 0.6px;
	text-align: center;
	text-decoration: none;

	border: unset;
	border-radius: 8px;
	cursor: pointer;
	overflow: hidden;
	user-select: none;
}

.listInput > .add:hover {
    background-color: rgba(0, 0, 0, 0.2);
}

.listInput > .add::before {
    content: "\f055";
    font-family: "Font Awesome";
    font-size: 20px;
    font-weight: 600;
}

/** ===================== SQ-SELECT ===================== */

.sq-selector {
    position: relative;
    display: inline-block;
    overflow: visible;

    --background: rgb(242, 242, 242);
    --active: var(--osc-color-blue);
    --color: black;
    --color-hover: white;
}

.sq-selector > input {
    position: absolute;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    border: 0;
    opacity: 0;
    border-radius: 1rem;
}

.sq-selector > .current {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;

    width: 100%;
    height: 100%;
    padding: 1rem;
    box-sizing: border-box;
    border-radius: 1rem;

    cursor: pointer;
    user-select: none;
    background-color: var(--background);
}

.sq-selector > .current:hover,
.sq-selector.show > .current {
    background-color: var(--active);
}

.sq-selector > .current > .icon {
    margin-right: 0.7rem;
}

.sq-selector > .current:hover > .icon::after,
.sq-selector.show > .current > .icon::after {
    color: var(--color-hover);
}

.sq-selector > .current > .value {
    flex-grow: 1;
    margin-right: 1rem;

    font-size: 1rem;
    font-weight: normal;
    color: var(--color);
}

.sq-selector > .current:hover > .value,
.sq-selector.show > .current > .value {
    color: var(--color-hover);
}

.sq-selector > .current > .arrow::after {
    font-size: 1rem;
    line-height: 20px;
    color: var(--color);

    transition: transform 0.3s cubic-bezier(0.25, 1, 0.5, 1);
}

.sq-selector > .current:hover > .arrow::after,
.sq-selector.show > .current > .arrow::after {
    color: var(--color-hover);
}

.sq-selector.show > .current > .arrow::after {
    transform: rotate(90deg);
}

.sq-selector > .select {
    position: relative;
    display: block;

    width: 100%;
    height: 0;
    margin-top: 0.3rem;
    border-radius: 6px;

    overflow: hidden;
    background-color: var(--background);
    transition: height 0.3s cubic-bezier(0.25, 1, 0.5, 1);
}

.sq-selector.fixed > .select {
    position: absolute;
    z-index: 999;
}

.sq-selector > .select > .list {
    display: inline-block;
    width: 100%;
    height: 100%;
    overflow: auto;
}

.sq-selector > .select > .list > .item {
    position: relative;
    display: block;
    margin: 2px;
    padding: 0.2rem 2rem;
    border-radius: 6px;
    cursor: pointer;
    user-select: none;

    font-size: 0.8rem;
    font-weight: normal;
    color: var(--color);
}

.sq-selector > .select > .list > .item:hover,
.sq-selector > .select > .list > .item.active {
    color: var(--color-hover);
    background-color: var(--active);
}

.sq-selector > .select > .list > .item:hover::before {
    content: "\f105";
	position: absolute;

    top: 50%;
    left: 1rem;
    transform: translateY(-50%);

    font-family: "Font Awesome";
    font-size: 1rem;
    font-weight: 600;
	text-align: center;
	line-height: 1rem;
	color: var(--color-hover);
}

.sq-selector.right > .select > .list > .item:hover::before {
    content: "\f104";
    left: unset;
    right: 1rem;
}

.sq-selector[data-color="pink"] {
    --active: var(--osc-color-pink);
}

.sq-selector.disabled {
	--color-hover: black;
	opacity: 0.5;
}

.sq-selector.disabled > .current {
	background-color: var(--background);
	cursor: not-allowed;
}

body.dark .sq-selector {
    --background: rgb(26, 26, 26);
    --active: var(--osc-color-blue);
    --color: rgb(235, 235, 235);
    --color-hover: white;
}

body.dark .sq-selector[data-color="pink"] {
    --active: var(--osc-color-pink);
}

/** CHOICE INPUT */

.sq-choice {
	position: relative;
	display: flex;
	flex-direction: row;

    --background: rgb(255, 255, 255);
    --active: var(--osc-color-blue);
}

.sq-choice > icon {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
	flex-grow: 1;

	padding: 0.5rem;
	box-sizing: border-box;
	border: 0.2rem solid transparent;

	cursor: pointer;
	background-color: var(--background);

	transition:
		border-color 0.1s ease-out,
		background-color 0.1s ease-out;
}

.sq-choice.with-grow > icon {
	transition:
		border-color 0.1s ease-out,
        padding 0.6s cubic-bezier(0.16, 1, 0.3, 1),
		background-color 0.1s ease-out;
}

.sq-choice > icon:hover {
	border-color: var(--active);
}

.sq-choice.with-grow > icon:active {
    transition:
		border-color 0.1s ease-out,
        padding 1.2s cubic-bezier(0.215, 0.61, 0.355, 1),
		background-color 0.1s ease-out;

    padding: 10px 40px;
}

.sq-choice > icon.active {
	background-color: var(--active);
}

.sq-choice > icon.active::after {
	color: white;
}

.sq-choice > icon:first-child {
	border-top-left-radius: 0.5rem;
	border-bottom-left-radius: 0.5rem;
}

.sq-choice > icon:last-child {
	border-top-right-radius: 0.5rem;
	border-bottom-right-radius: 0.5rem;
}

body.dark .sq-choice {
    --background: rgb(28, 28, 28);
}

.sq-choice[data-color="pink"] {
    --active: var(--osc-color-pink);
}


/** OSC INPUT */

.osc-input {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;

    --color: black;
    --background: white;
    --focus-background: var(--background-1);
    --focus-border: var(--accent);

    font-family: var(--heading-font);
    color: var(--color);
    background-color: var(--background);
    border-radius: 1rem;
}

.osc-input > label {
    margin: 0 2rem 0 1.5rem;
    font-weight: 600;
}

.osc-input > input {
    flex-grow: 1;
    padding: 1rem;
    padding-bottom: 1rem;

    border: 0.1rem solid var(--background);
    background-color: var(--background);

    font-family: var(--heading-font);
    font-size: 1rem;
    color: var(--color);
    line-height: 1;

    border-radius: 1rem;
    transition: all 0.2s cubic-bezier(0.25, 1, 0.5, 1);
}

.osc-input > input:focus {
    outline: none;
    border: 0.1rem solid var(--focus-border);
    background-color: var(--focus-background);
}

body.dark .osc-input {
    --color: white;
    --background: rgb(26, 26, 26);
    --focus-background: rgb(58, 58, 58);
    --focus-border: var(--osc-color-blue);
}
